class RangeDatepickerCell extends Polymer.Element{static get is(){return"range-datepicker-cell"}static get properties(){return{day:Object,_selected:{type:Boolean,value:/* ignoreName */ /* ignoreName */!1/* skipSlots */ /* skipSlots */},_hovered:{type:Boolean,value:!1},dateTo:Number,dateFrom:Number,month:String,hoveredDate:Number,min:Number,max:Number,_disabled:{type:Boolean,value:!1},disabledDays:{type:Array,value:[]}}}static get observers(){return["_dateChanged(dateFrom, dateTo, hoveredDate, day)"]}_dateChanged(dateFrom,dateTo,hoveredDate,day){this._selected=!1;this._hovered=!1;const parsedDateFrom=parseInt(dateFrom,10),parsedDateTo=parseInt(dateTo,10);if(day){if(parsedDateTo===day.date||parsedDateFrom===day.date){this._selected=!0/* skipSlots */}if((hoveredDate===day.date||day.date<hoveredDate)&&day.date>parsedDateFrom&&!parsedDateTo&&!Number.isNaN(parsedDateFrom)&&parsedDateFrom!==void 0&&!this._selected||day.date>parsedDateFrom&&day.date<parsedDateTo){this._hovered=!0}}}_handleTap(){if(!this._disabled){this.dispatchEvent(new CustomEvent("date-is-selected",{detail:{date:this.day.date}}))}}_handleHover(){this.dispatchEvent(new CustomEvent("date-is-hovered",{detail:{date:this.day.date}}))}_isSelected(selected){if(selected){return"selected"}return""}_isHovered(hovered){if(hovered){return"hovered"}return""}_isEnabled(day,min,max,disabledDays){this._disabled=!1;if(disabledDays&&day&&day.date){if(day.date<min||day.date>max||-1!==disabledDays.findIndex(disabledDay=>parseInt(disabledDay,10)===day.date)){this._disabled=!0;return"disabled"}}return""}}window.customElements.define(RangeDatepickerCell.is,RangeDatepickerCell);